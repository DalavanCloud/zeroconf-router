#
# Requires super-nginx build with luajit: https://github.com/ezmobius/super-nginx
#

worker_processes  1;
error_log  logs/error.log;

events {
    worker_connections  1024;
}

http {
    server {
        listen       3000;
        server_name  localhost;

        location /zmq {
          default_type 'text/plain';

          # force reading request body
          lua_need_request_body on;
          client_max_body_size 100k;
          client_body_in_single_buffer on;

          content_by_lua '
              -- modules are loaded once into each worker process and are shared by all
              -- subsequent requests, hence we can share a single ZMQ socket
              local router = require("zmqrouter")

              -- forward the user agent + request body of the request to our handler
              router.send(ngx.var.http_user_agent .. " > " .. ngx.var.request_body)

              -- wait to hear a response from one of our downstream ZMQ workers
              --
              -- WARNING: this is a terrible way to do it.. since we are blocking
              -- the nginx reactor while we are waiting for the response. it is a
              -- working proof of concept.. but the ZMQ socket needs to be integrated
              -- into nginx epoll loop

              ngx.say(router.response())
          ';
        }
    }
}